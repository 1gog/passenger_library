As you've read earlier, Passenger collaborates with other components. This is why Passenger supports multiple *integration modes*. Each integration mode is optimized for collaboration with a different component.

Throughout the rest of this basics walkthrough, we will cover the Standalone mode only. The Nginx and Apache integration modes are covered in the [deployment walkthrough](<%= url_for "/walkthroughs/deploy/#{language_type}/index.html" %>), as well as in the various [guides](<%= url_for '/guides/index.html' %>).

<figure>
  <img src="../shared/integration_modes.png">
  <figcaption>Passenger's supported integration modes. In the Standalone modes, Passenger uses a builtin web server. In the Nginx/Apache integration modes, Passenger integrates with Nginx or Apache.</figcaption>
</figure>

The supported integration modes are:

 * **Standalone mode**<br>
   The Standalone mode is what you've experienced in the [Getting Started](<%= url_for "/walkthroughs/start/#{language_type}.html" %>) tutorial. You start Passenger through the `passenger start` command.
   <% if language_type == :ruby -%>
   In this mode, Passenger behaves somewhat like "rails server".
   <% end -%>

   In this mode, Passenger doesn't collaborate with other components, hence the name. Because of this, the Standalone mode is the easiest mode to get started with. We recommend this mode for use during development. That said, this mode is 
   also fit for production.

 * **Nginx integration mode**<br>
   The Nginx integration mode provides easy integration with Nginx. Passenger operates as an Nginx module. You operate Passenger mostly through Nginx and through Nginx configuration files. So instead of worrying about Passenger and Nginx seperately, you treat the both of them as a whole.

   This mode is mainly meant for production use, not for development use.

 * **Apache integration mode**<br>
   The Apache integration mode provides easy integration with Apache. Passenger operates as an Apache module. You operate Passenger mostly through Apache and through Apache configuration files. So instead of worrying about Passenger and Apache seperately, you treat the both of them as a whole.

   This mode is mainly meant for production use, not for development use.

### Differences

All modes provide roughly the same feature sets. The main differences lie in...

 * ...performance. Standalone and Nginx are slightly faster than Apache.
 * ...usability. Standalone is easier during development, but Nginx and Apache are easier during production.
 * ...multitenancy. The Nginx and Apache integration modes can host multiple apps at the same time.
