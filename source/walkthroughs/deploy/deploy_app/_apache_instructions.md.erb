<%=
result = {}
output = render_partial("/walkthroughs/deploy/deploy_app/preamble.md", locals: locals.merge(result: result))
header_step = result[:header_step]
output
%>

<%
header_step += 1
substep = 0
%>
<%= h2(nil, "#{header_step} Configuring Apache and Passenger") %>

Now that you are done with transferring your app's code to the server and setting up an environment for your app, it is time to configure Apache so that Passenger knows how to serve your app.

<% substep += 1 %>
<%= h3(nil, "#{header_step}.#{substep} Edit Apache configuration file") %>

We need to edit the Apache configuration file and setup a virtual host entry that points to your app. This virtual host entry tells Apache (and Passenger) where your app is located.

Open your Apache configuration file as follows:

<table class="table table-bordered table-striped">
  <tr>
    <td>Debian, Ubuntu</td>
    <td>
      <p>Create a new Apache config file for your app:</p>
      <pre class="highlight"><span style="prompt">$ </span>nano /etc/apache2/sites-enabled/<span class="o">myapp</span>.conf</pre>
      <p>Replace <code>myapp</code> with your app's name.</p>
    </td>
  </tr>
  <tr>
    <td>Red Hat, CentOS, Fedora, Scientific Linux, Amazon Linux</td>
    <td>
      <p>Create a new Apache config file for your app:</p>
      <pre class="highlight"><span style="prompt">$ </span>nano /etc/httpd/sites-enabled/<span class="o">myapp</span>.conf</pre>
      <p>Replace <code>myapp</code> with your app's name.</p>
    </td>
  </tr>
  <tr>
    <td>Other operating systems</td>
    <td>
      <p>Open your Apache config file. We will add a virtual host entry at the end of that file. The file is probably located in one of these locations:</p>
      <ul>
        <li>/etc/apache2/httpd.conf</li>
        <li>/etc/apache2/apache2.conf</li>
        <li>/etc/httpd/httpd.conf</li>
      </ul>
    </td>
  </tr>
</table>

Insert:

<% if language_type == :nodejs || language_type == :iojs %>
  <pre class="highlight">&lt;VirtualHost *:80&gt;
    ServerName <span class="o">yourserver.com</span>

    <span class="c"># Tell Apache and Passenger where your app's code directory is</span>
    DocumentRoot <span class="o">/var/www/myapp/code</span>/public
    PassengerAppRoot <span class="o">/var/www/myapp/code</span>

    <span class="c"># Tell Passenger that your app is a <%= language_name %> app</span>
    PassengerAppType node
    PassengerStartupFile <span class="o">app.js</span>

    <span class="c"># Relax Apache security settings</span>
    &lt;Directory <span class="o">/var/www/myapp/code</span>/public&gt;
      Allow from all
      Options -MultiViews
      <span class="c"># Uncomment this if you're on Apache >= 2.4:</span>
      <span class="c">#Require all granted</span>
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;</pre>

  Replace `yourserver.com` with your server's host name, replace `/var/www/myapp/code` with your application's code directory path and replace `app.js` with your app's entry point file.
<% elsif language_type == :meteor %>
  <pre class="highlight">&lt;VirtualHost *:80&gt;
    ServerName <span class="o">yourserver.com</span>

    <span class="c"># Tell Apache and Passenger where your app's code directory is</span>
    DocumentRoot <span class="o">/var/www/myapp/code</span>/public
    PassengerAppRoot <span class="o">/var/www/myapp/code</span>

    <span class="c"># Tell Passenger that your app is a bundled Meteor app</span>
    PassengerAppType node
    PassengerStartupFile main.js

    <span class="c"># Relax Apache security settings</span>
    &lt;Directory <span class="o">/var/www/myapp/code</span>/public&gt;
      Allow from all
      Options -MultiViews
      <span class="c"># Uncomment this if you're on Apache >= 2.4:</span>
      <span class="c">#Require all granted</span>
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;</pre>

  Replace `yourserver.com` with your server's host name and replace `/var/www/myapp/code` with your application's code directory path.
<% else %>
  <pre class="highlight">&lt;VirtualHost *:80&gt;
    ServerName <span class="o">yourserver.com</span>

    <span class="c"># Tell Apache and Passenger where your app's 'public' directory is</span>
    DocumentRoot <span class="o">/var/www/myapp/code</span>/public

    <span class="c"># Relax Apache security settings</span>
    &lt;Directory <span class="o">/var/www/myapp/code</span>/public&gt;
      Allow from all
      Options -MultiViews
      <span class="c"># Uncomment this if you're on Apache >= 2.4:</span>
      <span class="c">#Require all granted</span>
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;</pre>

  Replace `yourserver.com` with your server's host name, and replace `/var/www/myapp/code` with your application's code directory path. However, make sure that Apache is configured to point to the `public` subdirectory inside it!
<% end %>

When you are done, restart Apache:

<pre class="highlight"><span class="prompt">$ </span>sudo apachectl restart</pre>

(Depending on your operating system, the right command may be `apache2ctl` instead of `apachectl`.)

<% substep += 1 %>
<%= h3(nil, "#{header_step}.#{substep} Test drive") %>

You should now be able to access your app through the server's host name! Try running this from your local computer. Replace `yourserver.com` with your server's hostname, exactly as it appears in the Apache config file's `ServerName` directive.

<pre class="highlight"><span class="prompt">$ </span>curl http://yourserver.com/
<span class="output">...your app's front page HTML...</span></pre>
