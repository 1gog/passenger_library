<%=
result = {}
output = render_partial("/walkthroughs/deploy/deploy_app/preamble.md", locals: locals.merge(result: result))
header_step = result[:header_step]
output
%>

<%
header_step += 1
substep = 0
%>
<%= h2(nil, "#{header_step} Configuring Nginx and Passenger") %>

Now that you are done with transferring your app's code to the server and setting up an environment for your app, it is time to configure Nginx so that Passenger knows how to serve your app.

<% substep += 1 %>
<%= h3(nil, "#{header_step}.#{substep} Edit Nginx configuration file") %>

We need to edit the Nginx configuration file and setup a virtual host entry that points to your app. This virtual host entry tells Nginx (and Passenger) where your app is located.

Open your Nginx configuration file as follows:

<table class="table table-bordered table-striped">
  <tr>
    <td>Debian, Ubuntu</td>
    <td>
      <p>
        <strong>If you installed Passenger + Nginx through Phusion's APT repository:</strong>
      </p>
      <p>
        Create a new Nginx config file for your app:
      </p>
      <pre class="highlight"><span style="prompt">$ </span>nano /etc/nginx/sites-enabled/<span class="o">myapp</span>.conf</pre>
      <p>
        Replace <code>myapp</code> with your app's name.
      </p>

      <p>
        <strong>If you installed Passenger + Nginx through source tarball or Ruby gem:</strong>
      </p>
      <p>
        Open /opt/nginx/conf/nginx.conf (assuming you installed Nginx to the prefix /opt/nginx). We will add a virtual host entry at the end of that file.
      </p>
    </td>
  </tr>
  <tr>
    <td>Red Hat, CentOS</td>
    <td>
      <p>
        <strong>If you installed Passenger + Nginx through Phusion's YUM repository:</strong>
      </p>
      <p>
        Create a new Nginx config file for your app:
      </p>
      <pre class="highlight"><span style="prompt">$ </span>nano /etc/nginx/sites-enabled/<span class="o">myapp</span>.conf</pre>
      <p>
        Replace <code>myapp</code> with your app's name.
      </p>

      <p>
        <strong>If you installed Passenger + Nginx through source tarball or Ruby gem:</strong>
      </p>
      <p>
        Open /opt/nginx/conf/nginx.conf (assuming you installed Nginx to the prefix /opt/nginx). We will add a virtual host entry at the end of that file.
      </p>
    </td>
  </tr>
  <tr>
    <td>Other operating systems</td>
    <td>
      <p>Open your Nginx config file. We will add a virtual host entry at the end of that file. This file is usually located in /etc/nginx/nginx.conf or /usr/local/etc/nginx/nginx.conf.</p>
    </td>
  </tr>
</table>

Insert:

<% if language_type == :nodejs || language_type == :iojs %>
  <pre class="highlight">server {
    listen 80;
    server_name <span class="o">yourserver.com</span>;

    <span class="c"># Tell Nginx and Passenger where your app's 'public' directory is</span>
    root <span class="o">/var/www/myapp/code</span>/public;

    <span class="c"># Turn on Passenger</span>
    passenger_enabled on;
    <span class="c"># Tell Passenger that your app is a <%= language_name %> app</span>
    passenger_app_type node;
    passenger_startup_file <span class="o">app.js</span>;
}</pre>

  Replace `yourserver.com` with your server's host name, replace `/var/www/myapp/code` with your application's code directory path and replace `app.js` with your app's entry point file.
<% elsif language_type == :meteor %>
  <pre class="highlight">server {
    listen 80;
    server_name <span class="o">yourserver.com</span>;

    <span class="c"># Tell Nginx and Passenger where your app's 'public' directory is</span>
    root <span class="o">/var/www/myapp/code</span>/public;

    <span class="c"># Turn on Passenger</span>
    passenger_enabled on;
    <span class="c"># Tell Passenger that your app is a Meteor app</span>
    passenger_app_type node;
    passenger_startup_file main.js;
}</pre>

  Replace `yourserver.com` with your server's host name and replace `/var/www/myapp/code` with your application's code directory path.
<% else %>
  <pre class="highlight">server {
    listen 80;
    server_name <span class="o">yourserver.com</span>;

    <span class="c"># Tell Nginx and Passenger where your app's 'public' directory is</span>
    root <span class="o">/var/www/myapp/code</span>/public;

    <span class="c"># Turn on Passenger</span>
    passenger_enabled on;
}</pre>

  Replace `yourserver.com` with your server's host name, and replace `/var/www/myapp/code` with your application's code directory path. However, make sure that Nginx is configured to point to the `public` subdirectory inside it!
<% end %>

When you are done, restart Nginx:

<table class="table table-bordered table-striped">
  <tr>
    <td>
      <p>If you installed Passenger + Nginx through Phusion's APT repository or YUM repository:</p>
    </td>
    <td>
      <p>Run:</p>
      <pre class="highlight"><span style="prompt">$ </span>sudo service nginx restart</pre>
    </td>
  </tr>
  <tr>
    <td>
      <p>If you installed Passenger + Nginx from source tarball or Ruby gem:</p>
    </td>
    <td>
      <p>Assuming you installed Nginx to the prefix /opt/local, run:</p>
      <pre class="highlight"><span style="prompt">$ </span>sudo kill $(cat /opt/nginx/logs/nginx.pid)
<span style="prompt">$ </span>sudo /opt/nginx/sbin/nginx</pre>
    </td>
  </tr>
</table>

<% substep += 1 %>
<%= h3(nil, "#{header_step}.#{substep} Test drive") %>

You should now be able to access your app through the server's host name! Try running this from your local computer. Replace `yourserver.com` with your server's hostname, exactly as it appears in the Nginx config file's `server_name` directive.

<pre class="highlight"><span class="prompt">$ </span>curl http://yourserver.com/
<span class="output">...your app's front page HTML...</span></pre>
